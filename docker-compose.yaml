version: "3.9"

services:
  db:
    image: postgres
    container_name: db
    volumes:
      - ~/motify/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgresdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123motify
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: on-failure

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - '6379:6379'
      - '16379:16379'
    command: redis-server --requirepass Mohammad@99

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver | python manage.py runserver 0.0.0.0:7777"
    container_name: gateway
    working_dir: /code/gateway/
    volumes:
      - ./gateway:/code/gateway/
    ports:
      - "7777:7777"
      - "50051:50051"
    environment:
      - POSTGRES_NAME=gateway
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123motify
      - POSTGRES_HOST=db
      - GRPC_PORT=50051
      - RABBITMQ_HOST=rabbitmq
      - REDIS=redis
      - MUSIC_SERVICE=music:50061
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: on-failure

#  celery-worker-gateway:
#    build:
#      context: .
#      dockerfile: gateway/Dockerfile
#    command: celery -A gateway worker --loglevel=INFO
#    container_name: celery-worker-gateway
#    working_dir: /code/gateway/
#    volumes:
#      - ./gateway:/code/gateway/
#    environment:
#      - POSTGRES_NAME=gateway
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres123motify
#      - POSTGRES_HOST=db
#      - GRPC_PORT=50051
#      - RABBITMQ_HOST=rabbitmq
#      - REDIS=redis
#      - MUSIC_SERVICE=music:50061
#    depends_on:
#      - rabbitmq
#      - db
#      - gateway
#    restart: on-failure

  music:
    build:
      context: .
      dockerfile: music/Dockerfile
    container_name: music
    working_dir: /code/music/
    volumes:
      - ./music:/code/music/
    ports:
      - "7778:7778"
      - "50061:50061"
    environment:
      - POSTGRES_NAME=music
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123motify
      - POSTGRES_HOST=db
      - GRPC_PORT=50061
      - RABBITMQ_HOST=rabbitmq
      - GRPC_ADDRESS=music
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: on-failure
