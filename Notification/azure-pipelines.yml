trigger:
  branches:
    include:
      - main
  paths:
    include:
      - Notification
      - protos

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'a4d10f07-2d31-481c-9fc0-77de7e0a6cd2'
  imageRepository: 'motifynotification'
  containerRegistry: 'motifybackend.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Notification/Notification/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
  - stage: Test
    displayName: Run differnt types of test
    jobs:
      - job: Test
        displayName: Unit and Integration tests
        steps:
          # - script: docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres123motify -e POSTGRES_DB=gateway -d postgres
          #   displayName: Run postgres container
          # - script: docker run --name rabbitmq -p 5672:5672 -p 15672:15672  -d rabbitmq:3-management
          #   displayName: Run rabbitmq container
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
              publishTestResults: true
              projects: '**/NotificationTest.csproj'
              arguments: '--collect "XPlat Code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
            displayName: 'Run tests'
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '$(Agent.TempDirectory)/**/*coverage.cobertura.xml'
          # - task: QodanaScan@2022
          #   inputs:
          #     args: '-i $(Build.SourcesDirectory)/Notification/Notification'

  - stage: Docker_Build
    displayName: Build and push docker image
    jobs:
      - job: Build
        displayName: Build docker image
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(imageRepository)'
              command: 'buildAndPush'
              Dockerfile: '$(dockerfilePath)'
              buildContext: '$(Build.SourcesDirectory)'
              tags: '$(tag)'
  - stage: Deployment
    displayName: Pull the name image in Container App
    jobs:
      - job: Deploy
        displayName: Pull the name image in Container App
        steps:
          - task: AzureContainerApps@0
            inputs:
              azureSubscription: 'Motify'
              acrName: 'motifybackend'
              imageToDeploy: '$(containerRegistry)/$(imageRepository):$(tag)'
              containerAppName: 'motify-dev-notification'
              resourceGroup: 'motify-dev'
              containerAppEnvironment: 'motify-dev-managed-environment'
              targetPort: '5038'